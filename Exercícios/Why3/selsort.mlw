module SelectionSort_jsp

  use int.Int
  use ref.Ref
  use array.Array
  use array.IntArraySorted
  use array.ArrayPermut
  use array.ArrayEq



  let swap (a: array int) (i: int) (j: int) 
    requires { 0 <= i < length a /\ 0 <= j < length a }
    ensures { exchange (old a) a i j }
  = let v = a[i] in
      a[i] <- a[j];
      a[j] <- v

    

  let select (a: array int) (i: int) : int
    requires { 0 <= i < length a }
    ensures  { i <= result < length a }
    ensures  { forall k:int. i <= k < length a -> a[k] >= a[result] }
  = let min = ref i in
      for j = i + 1 to length a - 1 do
        invariant { i <= !min < j }
        invariant { forall k:int. i <= k < j -> a[!min] <= a[k] }
        if a[j] < a[!min] then min := j
      done;
    !min

       
  let selection_sort_sort (a: array int) 
    ensures { sorted a }
    ensures { permut_all (old a) a }
  = for i = 0 to length a - 1 do
      invariant { sorted_sub a 0 i } 
      invariant { forall k1 k2 : int. 0 <= k1 < i <= k2 < length a -> a[k1] <= a[k2] }
      invariant { permut_all (old a) a }
      let min = select a i
      in if min <> i then swap a min i
    done

  

end      



